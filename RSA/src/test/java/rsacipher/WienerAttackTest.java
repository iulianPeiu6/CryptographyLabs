package rsacipher;

import org.junit.jupiter.api.Test;

import java.math.BigInteger;

import static org.junit.jupiter.api.Assertions.*;

class WienerAttackTest {

    @Test
    public void testWienerAttack1() {
        WienerAttack wienerAttack = new WienerAttack(new BigInteger("6792605526025"), new BigInteger("9449868410449"));

        var d= wienerAttack.attack();
        System.out.println(d);

        BigInteger p =BigInteger.valueOf(1234577), q=BigInteger.valueOf(7654337);
        BigInteger phi = p.subtract(BigInteger.ONE).multiply(q.subtract(BigInteger.ONE));

        assertTrue(new BigInteger("6792605526025").modInverse(phi).equals(d));
    }

    @Test
    public void testWienerAttack2() {
        WienerAttack wienerAttack = new WienerAttack(new BigInteger("44598251142417535121365176389097472886004547620498587196637028250785621416609954924107228171779826812564450558386070863338405090708203920066925426522584172770629487602232360693706521107911895310319989921169318202224097739016252544913819802671755649536088117809831381940146419602124919706024152810967126830967"),
                new BigInteger("94400567826854724487909837398348327858277687772498043028143080274141357168982328449151039212940544180753206250882172215623025263699414679367833398858755440423828380162368132951103946930488990027827989933432181959968836035369641054955336867327681756681532771354933952141599581827698618739724580124555641633861"));

        var d= wienerAttack.attack();
        System.out.println(d);

        BigInteger p =BigInteger.valueOf(1234577), q=BigInteger.valueOf(7654337);
        BigInteger phi = p.subtract(BigInteger.ONE).multiply(q.subtract(BigInteger.ONE));

        assertTrue(new BigInteger("65539").equals(d));
    }

    @Test
    public void testWienerAttack3() {
        WienerAttack wienerAttack = new WienerAttack(new BigInteger("10084693923014010060314882505995665719248600940907620928009173274851836565816430794531165063624824457967376038891537156007802543927795977197024951892854288848497481968777220310962739570519341519994633345777736896068232405102592268329963042136768707471870967375894405251250172059159634277151063207486144315335"),
                new BigInteger("97756999890880687664320882321692704695770103725569816755704019849572401708012082370303363974355727421401442268014626319975634651636916442724197130457277821052143647231550876943032790786164289447668977819473171752424759166250880017979732305915258546555766904130184997109390007443567957381953458031960765173587"));

        var d= wienerAttack.attack();
        System.out.println(d);

        assertTrue(new BigInteger("20536757012773509689629316926801780887727844640194283367315040740196870700071").equals(d));
    }

}